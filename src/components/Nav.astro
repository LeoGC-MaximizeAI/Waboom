---
import Icon from './Icon.astro';
import ThemeToggle from './ThemeToggle.astro';
import type { iconPaths } from './IconPaths';

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: 'Home', href: '/' },
	{ label: 'Voice Agents', href: '/voice-agents/' },
	{ label: 'Services', href: '/services/' },
	{ label: 'About', href: '/about/' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: { label: string; href: string; icon: keyof typeof iconPaths }[] = [
	{ label: 'Twitter', href: 'https://twitter.com/me', icon: 'twitter-logo' },
	{ label: 'LinkedIn', href: 'https://linkedin.com/me', icon: 'linkedin-logo' },
	{ label: 'GitHub', href: 'https://github.com/me', icon: 'github-logo' },
];

/** Test if a link is pointing to the current page. */
const isCurrentPage = (href: string) => {
	let pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
	if (pathname.at(0) !== '/') pathname = '/' + pathname;
	if (pathname.at(-1) !== '/') pathname += '/';
	return pathname === href || (href !== '/' && pathname.startsWith(href));
};
---

<nav class="enterprise-nav">
	<div class="menu-header">
		<a href="/" class="site-title">
			<img src="/assets/waboom.png" alt="Waboom Logo" class="site-title-logo">
		</a>
		<menu-button>
			<template>
				<button class="menu-button" aria-expanded="false">
					<span class="sr-only">Menu</span>
					<Icon icon="list" />
				</button>
			</template>
		</menu-button>
	</div>
	<noscript>
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a aria-current={isCurrentPage(href) ? 'page' : null} class="link" href={href}>
							{label}
						</a>
					</li>
				))
			}
		</ul>
	</noscript>
	<noscript>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
		</div>
	</noscript>
	<div id="menu-content" hidden>
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a aria-current={isCurrentPage(href) ? 'page' : null} class="link" href={href}>
							{label}
						</a>
					</li>
				))
			}
		</ul>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
		</div>
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(this.querySelector('template')!.content.cloneNode(true));
			const btn = this.querySelector('button')!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById('menu-content')!;
			menu.hidden = true;
			// Add "menu-content" class in JS to avoid covering content in non-JS browsers.
			menu.classList.add('menu-content');

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
				menu.hidden = !expand;
			};

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener('click', () => setExpanded(menu.hidden));

			// Hide menu button for large screens.
			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};
			const mediaQueries = window.matchMedia('(min-width: 50em)');
			handleViewports(mediaQueries);
			mediaQueries.addEventListener('change', handleViewports);
		}
	}
	customElements.define('menu-button', MenuButton);
</script>

<style>
	.enterprise-nav {
		z-index: 9999;
		position: relative;
		font-family: var(--font-brand);
		font-weight: 500;
		background: linear-gradient(to right, var(--gray-900), var(--gray-800));
		box-shadow: var(--shadow-lg);
		border-bottom: 1px solid var(--gray-700);
		padding: 0.5rem 2rem;
	}

	.site-title-logo {
		height: 60px;
		transition: transform 0.2s ease;
	}

	.site-title-logo:hover {
		transform: scale(1.05);
	}

	.menu-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		gap: 1rem;
		max-width: var(--container-max-width, 1400px);
		margin: 0 auto;
	}

	.site-title {
		display: flex;
		align-items: center;
		text-decoration: none;
		color: var(--gray-0);
	}

	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		border-radius: 8px;
		padding: 0.75rem;
		font-size: 1.5rem;
		color: var(--gray-200);
		background: var(--gray-800);
		transition: all 0.2s ease;
	}

	.menu-button:hover {
		color: var(--gray-0);
		background: var(--gray-700);
	}

	.menu-button[aria-expanded='true'] {
		color: var(--gray-0);
		background: var(--gray-700);
	}

	.menu-button[hidden] {
		display: none;
	}

	.menu-content {
		position: absolute;
		left: 0;
		right: 0;
		background: var(--gray-900);
		border-radius: 0 0 12px 12px;
		box-shadow: var(--shadow-xl);
	}

	.nav-items {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		font-size: var(--text-md);
		line-height: 1.2;
		list-style: none;
		padding: 1.5rem;
		background: transparent;
	}

	.link {
		display: inline-block;
		padding: 0.5rem 1rem;
		color: var(--gray-300);
		text-decoration: none;
		border-radius: 6px;
		transition: all 0.2s ease;
	}

	.link:hover {
		color: var(--gray-0);
		background: var(--gray-800);
	}

	.link[aria-current] {
		color: var(--gray-0);
		background: var(--gray-800);
		font-weight: 600;
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.5rem;

		display: flex;
		justify-content: space-between;
		gap: 0.75rem;
		padding: 1.5rem;
		border-top: 1px solid var(--gray-800);
	}

	.socials {
		display: flex;
		gap: 1rem;
		font-size: var(--icon-size);
	}

	.social {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--gray-300);
		transition: color 0.2s ease;
		border-radius: 6px;
	}

	.social:hover {
		color: var(--gray-0);
	}

	@media (min-width: 50em) {
		.menu-header {
			padding: 0;
		}

		.nav-items {
			position: relative;
			flex-direction: row;
			gap: 1rem;
			padding: 0;
		}

		.menu-content {
			position: static;
			padding: 0;
			background: transparent;
			box-shadow: none;
		}

		.menu-content[hidden] {
			display: block;
		}

		.menu-footer {
			border: 0;
			padding: 0;
		}

		.socials {
			display: flex;
			justify-content: flex-end;
		}
	}
</style>
