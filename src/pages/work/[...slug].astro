---
import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';
import { render } from 'astro:content';

interface Client {
	name: string;
	logo?: string;
	url?: string;
	testimonial: string;
	testimonial_author: string;
}

interface WorkFrontmatter {
	title: string;
	description: string;
	publishDate: Date;
	tags: string[];
	img: string;
	img_alt?: string;
	client?: Client;
}

interface Props {
	entry: CollectionEntry<'work'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const work = await getCollection('services');
	return work.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
const frontmatter = entry.data as WorkFrontmatter;

// Add debug logging
console.log('Entry data:', JSON.stringify(entry.data, null, 2));
---

<BaseLayout title={frontmatter.title} description={frontmatter.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/work/"><Icon icon="arrow-left" /> Work</a>
					<Hero title={frontmatter.title} align="start">
						<div class="details">
							<div class="tags">
								{frontmatter.tags.map((t) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{frontmatter.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="case-study">
					<div class="visual-content">
						{frontmatter.img && 
							<div class="main-image">
								<img src={frontmatter.img} alt={frontmatter.img_alt || ''} />
							</div>
						}
						{frontmatter.client && (
							<div class="client-section">
								<div class="client-info">
									{frontmatter.client.logo && (
										<img 
											src={frontmatter.client.logo} 
											alt={`${frontmatter.client.name} logo`}
											class="client-logo"
										/>
									)}
									<h3>Client Testimonial</h3>
								</div>
								<blockquote>
									<p>{frontmatter.client.testimonial}</p>
									<footer>
										<cite>- {frontmatter.client.testimonial_author}</cite>
										{frontmatter.client.url && (
											<a href={frontmatter.client.url} target="_blank" rel="noopener noreferrer" class="client-link">
												Visit Website <Icon icon="arrow-right" />
											</a>
										)}
									</footer>
								</blockquote>
							</div>
						)}
					</div>
					<div class="content">
						<Content />
					</div>
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.case-study {
		display: grid;
		gap: 3rem;
	}

	.visual-content {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	.main-image {
		border-radius: 1.5rem;
		overflow: hidden;
	}

	.main-image img {
		width: 100%;
		height: auto;
		object-fit: cover;
	}

	.client-section {
		background: var(--gradient-subtle);
		border-radius: 1rem;
		padding: 2rem;
		border: 1px solid var(--gray-800);
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	.client-info {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		align-items: flex-start;
	}

	.client-logo {
		max-height: 2.5rem;
		width: auto;
		object-fit: contain;
	}

	.client-section h3 {
		font-size: var(--text-lg);
		color: var(--gray-0);
		margin: 0;
	}

	.client-section blockquote {
		margin: 0;
		padding: 0;
		border: none;
		background: none;
	}

	.client-section blockquote p {
		font-size: var(--text-md);
		line-height: 1.6;
		color: var(--gray-200);
		margin: 0;
	}

	.client-section blockquote footer {
		margin-top: 1.5rem;
		display: flex;
		flex-direction: column;
		gap: 0.75rem;
	}

	.client-section cite {
		font-style: normal;
		color: var(--gray-0);
		font-weight: 500;
	}

	.client-link {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--accent-regular);
		text-decoration: none;
		font-size: var(--text-sm);
	}

	.client-link:hover {
		color: var(--accent-dark);
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h2) {
		font-size: var(--text-xl);
		color: var(--gray-0);
		margin: 2.5rem 0 1.5rem 0;
	}

	.content :global(h3) {
		font-size: var(--text-lg);
		color: var(--gray-0);
		margin: 2rem 0 1rem 0;
	}

	.content :global(h4),
	.content :global(h5) {
		font-size: var(--text-md);
		color: var(--gray-0);
		margin: 1.5rem 0 1rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding: 2rem;
		border-radius: 1rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		margin: 2rem 0;
	}

	.content :global(ul) {
		list-style-type: none;
		padding-left: 0;
	}

	.content :global(li) {
		padding: 0.5rem 0;
		position: relative;
		padding-left: 1.5rem;
	}

	.content :global(li::before) {
		content: "â€¢";
		color: var(--accent-regular);
		position: absolute;
		left: 0;
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.case-study {
			grid-template-columns: 1fr 1fr;
			align-items: start;
		}

		.visual-content {
			position: sticky;
			top: 2rem;
		}
	}
</style>
